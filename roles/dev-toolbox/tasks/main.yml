---
- name: Install emacs via APT
  apt:
    name: emacs
  become: yes
  become_method: sudo

- name: Install other text editors via APT
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - kwrite
    - gedit
  when: has_editors_other_than_emacs

- name: Install coding tools via APT
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - kompare
    - kdiff3
    - pandoc
  when: has_coding_tools
  tags: legacy

- name: Install SCM clients via APT
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - mercurial
    - subversion
  when: has_scm_other_than_git

- name: Install interpreters via APT
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - rhino
    - groovy
  when: has_exotic_interpreters

- name: Install python via APT
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - python-dev
    - python-setuptools # for easy_install among others

- name: Install python linters via APT
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - pychecker
    - pylint
    - pyflakes
  when: has_coding_tools

- name: Install LaTeX stuff via APT (may take up to 30 minutes)
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - texlive-latex-base
    - texlive-latex-extra
    - pgf
  when: has_latex

- name: Install FTP client via APT
  apt:
    name: gftp
  become: yes
  become_method: sudo
  when: has_ftp_client

- name: Install MySQL client via APT
  apt:
    name: mysql-client
  become: yes
  become_method: sudo
  when: has_mysql_client

- name: Install other network clients via APT
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - telnet
    - sshpass
    - mtr

- name: Install gnome-terminal via APT
  apt:
    name: gnome-terminal
  become: yes
  become_method: sudo
  when: has_lubuntu_desktop

- name: Install shell tools via APT
  apt:
    name: "{{ item }}"
    force: yes #FIXME shouldn't be necessary, needed because "mc-data mc cannot be authenticated"
  become: yes
  become_method: sudo
  with_items:
    - trash-cli
    - mc
    - pv
    - bash-completion
    - lib32ncurses5
    - pdfgrep

- name: Install kuser via APT
  apt:
    name: kuser
  become: yes
  become_method: sudo
  when: has_kuser

- name: Install other system tools via APT
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - apt-file
    - locate
    - lsof
    - htop
    - moreutils

- name: Install npm via APT
  apt:
    name: npm
  become: yes
  become_method: sudo
  when: npm_is_from_apt

- name: Install maven via APT (may take up to 15 minutes)
  apt:
    name: maven2
  become: yes
  become_method: sudo
  when: has_maven

- name: Install MongoDB via APT
  apt:
    name: mongodb
  become: yes
  become_method: sudo
  when: has_mongodb

- name: Install gmrun via APT
  apt:
    name: gmrun
  become: yes
  become_method: sudo
  when: has_lubuntu_desktop

- name: Install ansible-doc via APT
  apt:
    name: ansible-doc
  become: yes
  become_method: sudo
  when: has_ansible_doc

- name: Install other APT packages
  apt:
    name: "{{ item }}"
  become: yes
  become_method: sudo
  with_items:
    - ia32-libs
    - mcrypt
    - pwgen
    - xbacklight # for IntelliJ IDEA

# This one is broken on Ubuntu 14.04, see
# http://stackoverflow.com/questions/27341064/how-do-i-fix-importerror-cannot-import-name-incompleteread
- name: Remove broken pip
  apt:
    name: python-pip
    state: absent
  become: yes
  become_method: sudo

- name: Install pip
  easy_install:
    name: pip
  become: yes
  become_method: sudo

- name: Install uncommitted's dependencies
  pip:
    requirements: "{{ role_path }}/files/uncommitted-a754c0d/requirements.txt"
  become: yes
  become_method: sudo
  tags: legacy

- name: Install uncommitted
  pip:
    name: "{{ role_path }}/files/uncommitted-a754c0d/uncommitted-1.6.tar.gz"
  become: yes
  become_method: sudo
  tags: legacy

- name: "Add source line to bashrc"
  lineinfile:
    dest: "{{ main_bashrc_on_host }}"
    line: "source ${ansibleInventoryDir}/files/bashrc # uuidgen-79cb621e-49f4-4662-bd6c-518e97ae97cb"
    regexp: uuidgen-79cb621e-49f4-4662-bd6c-518e97ae97cb
    insertafter: uuidgen-20ce84f6-6313-4d61-8641-245c42741ffb
  tags: legacy

- name: "Add workstation to hosts"
  lineinfile:
    dest: /etc/hosts
    line: "10.111.8.108 workstation # uuidgen-4af6b62e-6972-4e3d-a7ab-9f220c6a861d"
    regexp: uuidgen-4af6b62e-6972-4e3d-a7ab-9f220c6a861d
  become: yes
  become_method: sudo
  tags: legacy

- name: Generate ssh key pair
  user:
    name: "{{ username }}"
    generate_ssh_key: yes
  when: has_ssh_agent

- name: Authorize ssh public key
  authorized_key:
    user: "{{ username }}"
    key: "{{ lookup('file', item + '/.ssh/id_rsa.pub') }}"
  with_items:
    - "{{ lookup('env', 'HOME') }}"
  when: has_ssh_agent

#FIXME: this task is executed each time:
- name: Add ssh private key to agent
  command: ssh-add
  when: has_ssh_agent
  #FIXME: fails on workstation: tags: legacy

#FIXME: this task is executed each time:
# Note: you can list gedit settings with `gsettings list-recursively | grep -i gedit`.
- name: Configure gedit
  command: "gsettings set {{ item }}"
  when: has_editors_other_than_emacs
  with_items:
    - org.gnome.gedit.preferences.editor create-backup-copy false
    - org.gnome.gedit.preferences.editor display-line-numbers true
  tags: legacy

- name: Cleanup older devilspie config location
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ lookup('env', 'HOME') }}/.devilspie/DesktopConsole.ds"
    - "{{ lookup('env', 'HOME') }}/.devilspie/DesktopConsole.ds.old"
  tags: legacy
