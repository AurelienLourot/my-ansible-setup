---
- name: "Set {{ link_name }} full path"
  set_fact:
    link: "{{ link_path }}/{{ link_name }}"

- name: "Set {{ link_name }} backup full path"
  set_fact:
    backup_fullpath: "{{ link }}.old"

#FIXME: I can't get 'become: "{{ with_sudo | bool }}"' to work, that's why it's duplicated here:
- name: "Make {{ link_name }} dir"
  file:
    path: "{{ link_path }}"
    state: directory
  when: with_sudo|bool == False
- name: "Make {{ link_name }} dir"
  file:
    path: "{{ link_path }}"
    state: directory
  when: with_sudo|bool
  become: yes
  become_method: sudo

- name: "Stat {{ link_name }}"
  stat:
    path: "{{ link }}"
    follow: True
  register: orig_file

- name: "Stat {{ link_name }} backup"
  stat:
    path: "{{ backup_fullpath }}"
  register: backup_file

#FIXME: I can't get 'become: "{{ with_sudo | bool }}"' to work, that's why it's all duplicated here:
- name: "Backup {{ link_name }}"
  copy:
    src: "{{ link }}"
    dest: "{{ backup_fullpath }}"
    follow: yes
  when: with_sudo|bool == False and backup|bool and orig_file.stat.exists and backup_file.stat.exists == False
- name: "Backup {{ link_name }}"
  copy:
    src: "{{ link }}"
    dest: "{{ backup_fullpath }}"
    follow: yes
  when: with_sudo|bool and backup|bool and orig_file.stat.exists and backup_file.stat.exists == False
  become: yes
  become_method: sudo
# Note: this is necessary for directories as otherwise the symlink creation will fail to replace the
#       original, even with `force: yes`.
- name: "Delete backed-up {{ link_name }}"
  file:
    path: "{{ link }}"
    state: absent
  when: with_sudo|bool == False and backup|bool and orig_file.stat.exists and backup_file.stat.exists == False
- name: "Delete backed-up {{ link_name }}"
  file:
    path: "{{ link }}"
    state: absent
  when: with_sudo|bool and backup|bool and orig_file.stat.exists and backup_file.stat.exists == False
  become: yes
  become_method: sudo
- name: "Link {{ link_name }}"
  file:
    src: "{{ target }}"
    path: "{{ link }}"
    state: link
    # Necessary if there is already a file in place of the link. This is necessary, for example, for
    # vlcrc because the VLC settings editor keep replacing our link by a new file.
    force: yes
  when: with_sudo|bool == False
- name: "Link {{ link_name }}"
  file:
    src: "{{ target }}"
    path: "{{ link }}"
    state: link
    # Necessary if there is already a file in place of the link. This is necessary, for example, for
    # vlcrc because the VLC settings editor keep replacing our link by a new file.
    force: yes
  when: with_sudo|bool
  become: yes
  become_method: sudo
